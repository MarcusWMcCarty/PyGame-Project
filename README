-Planning
    In Alien Invasion, the player controls a rocket ship that appears at the bottom center of the screen. 
    The player can move the ship right and left using the arrow keys and shoot bullets using the spacebar. 
    When the game begins, a fleet of aliens fill the sky and moves across and down the screen. 
    The player shoots and destroys the aliens.
    If the player shoots all the aliens, a new fleet appears that moves fasetr than the previous fleet. 
    If any alien hits the players ship or reaches the bottom of the screen, the player loses a ship.
    If the player loses three ships, the game ends. 

Starting the Game Project:
    Starts as a class called AlienInvasion.
    Sets up Display
    Sets up Surface, a surface in pygame is a part of the screen where a game element can be displayed.

Setting Background Color:
    Fill the background using the fill() method, which acts as a surface and only takes one argument, a color.

Creating a Settings Class
    Created a settings class to store settings varibales in one place. this approach works better for adjusting individual settings. 

Adding the Ship Imaage:
    Load the image and use pygame blit() method to draw it. 
    Postition the ship image into the mid bottom and called on it in the alien_invasion file to make it appear at te bottom of the screen.

Refactoring the _check_events() and _update_screen() methods
    The _check_events() Method 
        Weâ€™ll start by moving the code that manages events to a separate function
        called check_events(). This will simplify run_game() and isolate the event management loop. 
        Isolating the event loop allows you to manage events separately from other aspects of the game, like updating the screen.

    